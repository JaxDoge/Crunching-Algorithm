98. Validate Binary Search Tree

class TreeNode:
	def __init__(self, val = 0, left = None, right = None):
		self.val = val 
		self.left = left
		self.right = right


# 递归解法
class Solution:
	def isValidBST(self, root: TreeNode) -> bool:
		# Find out all invalida situation
		def helper(root: TreeNode, min: TreeNode, max: TreeNode):
            if not root: return True
            # the rule is when go into the right subtree, updating the minium limitation, and vise versa
            if max and root.val >= max.val:  # the maxium and minium value start from None
            	return False
            if min and root.val <= min.val:
            	return False
            return helper(root.left,min,root) and helper(root.right,root,max)

        return helper(root,None,None)

