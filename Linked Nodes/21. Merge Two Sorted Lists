21. Merge Two Sorted Lists

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

# Magical dummy head!!!
class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
    	if not l1: return l2 
    	if not l2: return l1 

        # dummy_head 

        dummy_head = ListNode(val = -1)
        
        # start point
        frog = dummy_head

        while l1 and l2:
	        # frog in the same link, treat nonetype with caution
	        if l1.val <= l2.val:
	        	frog.next = l1
	        	l1 = l1.next
	        	frog = frog.next
	        # frog leap to another link
	        else:
	        	frog.next = l2
	        	l2 = l2.next 
	        	frog = frog.next 

        # add what left out to the end 
        if l1:
        	frog.next = l1
        else:
        	frog.next = l2

        return dummy_head.next
