1288. Remove Covered Intervals


class Solution:
    def removeCoveredIntervals(self, intervals: List[List[int]]) -> int:
        n = len(intervals)
        import functools

        def udcmp(a: list, b: list):
            if a[0] == b[0]:
                return b[1] - a[1]
            else:
                return a[0] - b[0]

        sort_intv = sorted(intervals, key = functools.cmp_to_key(udcmp))

        #  consistently merge all interals, and decide if one interval is coverd by previous ones
        left = sort_intv[0][0]
        right = sort_intv[0][1]

        res = 0

        for i in range(1, n):
            # situation one, this interval is covered by all the previous ones
            if sort_intv[i][0] >= left and sort_intv[i][1] <= right:
                res += 1
            # situation two - this interval is partly overlap with all the previous ones
            elif sort_intv[i][0] <= right and sort_intv[i][1] >= right:
                right = sort_intv[i][1]
            # situation three - no overlap
            elif sort_intv[i][0] >= right:
                left = sort_intv[i][0]
                right = sort_intv[i][1]

        return n - res

